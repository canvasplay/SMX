{"version":3,"sources":["../src/smx.js"],"names":["global","smx","version","cache","document","documents","$smx","node","elems","_Node","xmlNode","id","getAttribute","e","Node","_","isArray","isUndefined","length","nodeType","result","i","push","window"],"mappings":";;AAAA;;;;;;AAOA,CAAC,UAASA,MAAT,EAAgB;;AAGhB,QAAIC,MAAM,EAAV;;AAEAA,QAAIC,OAAJ,GAAc,QAAd;;AAICD,QAAIE,KAAJ,GAAY,EAAZ;;AAEAF,QAAIG,QAAJ,GAAe,IAAf;AACAH,QAAII,SAAJ,GAAgB,EAAhB;;AAKE;AACA,QAAIC,OAAON,OAAO,MAAP,IAAiB,EAA5B;;AAIA;AACA;;AAEAM,SAAKH,KAAL,GAAa,EAAb;;AAGA;AACA;;AAEAG,SAAKC,IAAL,GAAY,UAAUC,KAAV,EAAiB;;AAIzB,YAAIC,QAAQ,SAARA,KAAQ,CAAUC,OAAV,EAAmB;;AAE3B,gBAAIC,KAAK,IAAT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAI;AACAA,qBAAKD,QAAQE,YAAR,CAAqB,IAArB,CAAL;AACH,aAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;;AAEd;AACA,gBAAI,CAACF,EAAL,EAAS;;AAET;AACA;AACA,gBAAIL,KAAKH,KAAL,CAAWQ,EAAX,CAAJ,EAAoB,OAAOL,KAAKH,KAAL,CAAWQ,EAAX,CAAP;;AAEpB;AACA,gBAAIJ,OAAO,IAAIN,IAAIa,IAAR,CAAaJ,OAAb,CAAX;;AAEA;AACAJ,iBAAKH,KAAL,CAAWQ,EAAX,IAAiBJ,IAAjB;;AAEA;AACA,mBAAOA,IAAP;AAEH,SA9BD;;AAmCA,YAAIC,UAAUO,EAAEC,OAAF,CAAUR,KAAV,KAAoB,CAACO,EAAEE,WAAF,CAAcT,MAAMU,MAApB,CAA/B,KAA+DH,EAAEE,WAAF,CAAcT,MAAMW,QAApB,CAAnE,EAAkG;AAC9F,gBAAIC,SAAS,EAAb;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIb,MAAMU,MAA1B,EAAkCG,GAAlC,EAAuC;AACnC,oBAAIb,MAAMa,CAAN,CAAJ,EAAc;AACV,wBAAId,OAAQC,MAAMa,CAAN,EAAS,CAAT,CAAD,GAAgBb,MAAMa,CAAN,CAAhB,GAA2BZ,MAAMD,MAAMa,CAAN,CAAN,CAAtC;AACA,wBAAId,IAAJ,EAAUa,OAAOE,IAAP,CAAYf,IAAZ;AACb;AACJ;AACD,mBAAOa,MAAP;AACH,SATD,MASO,IAAIZ,KAAJ,EAAW;AACd,gBAAIA,MAAM,CAAN,CAAJ,EAAc,OAAOA,KAAP,CAAd,KACK,OAAOC,MAAMD,KAAN,CAAP;AACR,SAHM,MAGA;AAEV,KArDD;;AAyDH;AACAR,WAAOC,GAAP,GAAaA,GAAb;AAGA,CA5FD,EA4FGsB,MA5FH","file":"smx.js","sourcesContent":["/**\r\n*\tSMX Synchronized Multimedia XML\r\n*\t@namespace smx\r\n*\r\n*/\r\n\r\n\r\n(function(global){\r\n\r\n\r\n\tvar smx = {};\r\n\r\n\tsmx.version = '0.8.14';\r\n\r\n\r\n  \r\n  smx.cache = {};\r\n  \r\n  smx.document = null;\r\n  smx.documents = [];\r\n\r\n\r\n\r\n\r\n    //declare and expose $smx namespace\r\n    var $smx = global['$smx'] = {};\r\n\r\n\r\n\r\n    ////////////////////////////////\r\n    // PRIVATE INDEXED NODE LIST CACHE\r\n\r\n    $smx.cache = {};\r\n\r\n\r\n    ////////////////////////////////\r\n    // SMX NODE WRAPPER\r\n\r\n    $smx.node = function (elems) {\r\n\r\n\r\n\r\n        var _Node = function (xmlNode) {\r\n\r\n            var id = null;\r\n\r\n            //if(!xmlNode) return;\r\n            //if (xmlNode.nodeName == 'undefined') return;\r\n            //if (typeof xmlNode.nodeType == 'undefined') return;\r\n            //if (xmlNode.nodeType != 1) return;\r\n\r\n            //can this try replace the 4 conditionals above? yes...\r\n            try {\r\n                id = xmlNode.getAttribute('id')\r\n            } catch (e) {}\r\n\r\n            //id attr is required!\r\n            if (!id) return;\r\n\r\n            //Does already exists a node with this id?\r\n            //prevent duplicated nodes and return existing one\r\n            if ($smx.cache[id]) return $smx.cache[id];\r\n\r\n            //create new Node from given XMLNode\r\n            var node = new smx.Node(xmlNode);\r\n\r\n            //add it to nodes cache\r\n            $smx.cache[id] = node;\r\n\r\n            //return just created node\r\n            return node;\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (elems && (_.isArray(elems) || !_.isUndefined(elems.length)) && _.isUndefined(elems.nodeType)) {\r\n            var result = [];\r\n            for (var i = 0; i < elems.length; i++) {\r\n                if (elems[i]) {\r\n                    var node = (elems[i][0]) ? elems[i] : _Node(elems[i]);\r\n                    if (node) result.push(node);\r\n                }\r\n            }\r\n            return result;\r\n        } else if (elems) {\r\n            if (elems[0]) return elems;\r\n            else return _Node(elems);\r\n        } else return;\r\n\r\n    };\r\n\r\n\r\n\r\n\t//expose\r\n\tglobal.smx = smx;\r\n\r\n\r\n})(window);\r\n\r\n\r\n\t"]}